name: CI
on:
  push:
    branches:
      - v6
      - v7
  pull_request:

env:
  SEQ_DB: sequelize_test
  SEQ_USER: sequelize_test
  SEQ_PW: sequelize_test

jobs:
  install-and-build:
    strategy:
      fail-fast: false
      matrix:
        node-version: [14, 16]
    name: Upload install and build artifact (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - name: Install dependencies and build sequelize
        run: yarn install --frozen-lockfile
      - name: Compress artifact
        run: tar -cf install-build-node-${{ matrix.node-version }}.tar ./lib ./node_modules ./types
      - uses: actions/upload-artifact@v3
        with:
          name: install-build-artifact-node-${{ matrix.node-version }}
          path: install-build-node-${{ matrix.node-version }}.tar
          retention-days: 1
  test-db2:
    strategy:
      fail-fast: false
      matrix:
        node-version: [14, 16]
    name: DB2 (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    needs: [ install-and-build ]
    env:
      DIALECT: db2
      SEQ_DB: testdbnode${{ matrix.node-version }}sha${{ github.sha }}
      SEQ_USER: db2inst1
      SEQ_PW: password
      SEQ_TEST_CLEANUP_TIMEOUT: 1200000
      SEQ_PORT: 50000
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - uses: actions/download-artifact@v3
        with:
          name: install-build-artifact-node-${{ matrix.node-version }}
      - name: Extract artifact
        run: tar -xf install-build-node-${{ matrix.node-version }}.tar
      - name: Generate DB name
        run: |
          echo "SEQ_DB=n${{ matrix.node-version }}s$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Print DB name
        run: echo "DB Name is $SEQ_DB"
      - name: Install Local DB2 Copy
        run: yarn start-db2
      - name: Print DB2 start logs
        run: sudo docker logs db2server
      - name: Integration Tests
        run: yarn test-integration
